import requests
import time

print("=== Corre√ß√£o: Novo modem detectado ===")

# 1. Verificar detec√ß√£o autom√°tica
print("\n1. Verificando detec√ß√£o autom√°tica...")
try:
    response = requests.get("http://127.0.0.1:8000/modem/api/diagnostic", timeout=15)
    diagnostic = response.json()
    
    if diagnostic.get('success') and diagnostic.get('found'):
        modem_info = diagnostic['found']
        print(f"‚úÖ Novo modem detectado:")
        print(f"   Porta: {modem_info['port']}")
        print(f"   Status: {modem_info['status']}")
        print(f"   Resposta AT: {modem_info.get('response_at', 'N/A')}")
    else:
        print("‚ùå Nenhum modem detectado automaticamente")
        if diagnostic.get('results'):
            print("   Portas testadas:")
            for result in diagnostic['results'][:3]:
                print(f"     {result['port']}: {result['status']}")
except Exception as e:
    print(f"‚ùå Erro na detec√ß√£o: {e}")

# 2. Reiniciar conex√£o do modem
print("\n2. Reiniciando conex√£o do modem...")
try:
    response = requests.post("http://127.0.0.1:8000/modem/api/restart", timeout=30)
    restart_result = response.json()
    print(f"üîÑ Rein√≠cio: {restart_result.get('message', 'N/A')}")
    
    if restart_result.get('success'):
        print("   Aguardando inicializa√ß√£o (8 segundos)...")
        time.sleep(8)
    else:
        print("‚ùå Falha no rein√≠cio")
        
except Exception as e:
    print(f"‚ùå Erro no rein√≠cio: {e}")

# 3. Verificar status ap√≥s rein√≠cio
print("\n3. Verificando status ap√≥s rein√≠cio...")
try:
    response = requests.get("http://127.0.0.1:8000/modem/api/status", timeout=10)
    status_data = response.json()
    
    if status_data.get('success'):
        data = status_data['data']
        print(f"üì± Status do modem:")
        print(f"   Conectado: {data.get('connected', False)}")
        print(f"   Operadora: {data.get('operator', 'N/A')}")
        print(f"   Sinal: {data.get('signal_strength', 0)}%")
        print(f"   Status: {data.get('status', 'N/A')}")
    else:
        print("‚ùå Erro ao obter status")
        
except Exception as e:
    print(f"‚ùå Erro no status: {e}")

# 4. Teste b√°sico de comunica√ß√£o
print("\n4. Teste b√°sico de comunica√ß√£o...")
try:
    response = requests.post("http://127.0.0.1:8000/modem/api/test-connection", timeout=15)
    test_result = response.json()
    print(f"üîß Teste de comunica√ß√£o: {test_result.get('message', 'N/A')}")
    
except Exception as e:
    print(f"‚ùå Erro no teste: {e}")

print("\n=== Corre√ß√£o conclu√≠da ===")
print("üí° Instru√ß√µes:")
print("1. Recarregue a p√°gina web (F5)")
print("2. Acesse http://127.0.0.1:8000/modem/ para verificar")
print("3. Se ainda n√£o funcionar, reinicie o servidor completamente")
